name: Nuke CICD Pipeline
trigger:
  batch: true
  branches:
    include:
    - prerelease
    - main
  tags:
    include:
    - bump-*
pr:
  branches:
    include:
    - '**'
jobs:
- job: PRE_SETUP
  displayName: Pre Setup
  pool:
    name: Azure Pipelines
    vmImage: windows-2022
  steps:
  - checkout: self
    fetchDepth: 0
    fetchTags: true
    submodules: recursive
    persistCredentials: true
  - script: ./build.cmd PipelinePreSetup
    name: NUKE_RUN
    displayName: Run Nuke PipelinePreSetup
  timeoutInMinutes: 30
  variables:
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSTEST1
  displayName: Test try 1
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_MAIN_RESTORE_KEY)
  - script: echo "Test azure 1"
    name: test_azure_1
    displayName: Custom azure step test 1
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_RUN_SCRIPT) PipelineRunEntry --args "run=test;idsToRun=NukeBuildHelpersTest1"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - script: echo "Test azure 2"
    name: test_azure_2
    displayName: Custom azure step test 2
  dependsOn:
  - PRE_SETUP
  condition: and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CONDITION, 'true'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST1_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSTEST2CUSTOMID
  displayName: Test try 2
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_RUN_SCRIPT) PipelineRunEntry --args "run=test;idsToRun=NukeBuildHelpersTest2CustomId"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  dependsOn:
  - PRE_SETUP
  condition: and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CONDITION, 'true'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST2CUSTOMID_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSBUILD1
  displayName: Build main
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_RUN_SCRIPT) PipelineRunEntry --args "run=build;idsToRun=NukeBuildHelpersBuild1"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - task: PublishPipelineArtifact@1
    displayName: Upload Artifacts
    inputs:
      artifact: build___nuke_build_helpers___NukeBuildHelpersBuild1
      targetPath: ./.nuke/temp/artifacts-upload
      continueOnError: true
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  condition: and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD1_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSBUILD2MAT1MAT3
  displayName: Build try Mat1 sub Mat3
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_RUN_SCRIPT) PipelineRunEntry --args "run=build;idsToRun=NukeBuildHelpersBuild2Mat1Mat3"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - task: PublishPipelineArtifact@1
    displayName: Upload Artifacts
    inputs:
      artifact: build___nuke_build_helpers___NukeBuildHelpersBuild2Mat1Mat3
      targetPath: ./.nuke/temp/artifacts-upload
      continueOnError: true
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  condition: and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT3_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSBUILD2MAT1MAT4
  displayName: Build try Mat1 sub Mat4
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_RUN_SCRIPT) PipelineRunEntry --args "run=build;idsToRun=NukeBuildHelpersBuild2Mat1Mat4"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - task: PublishPipelineArtifact@1
    displayName: Upload Artifacts
    inputs:
      artifact: build___nuke_build_helpers___NukeBuildHelpersBuild2Mat1Mat4
      targetPath: ./.nuke/temp/artifacts-upload
      continueOnError: true
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  condition: and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT1MAT4_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSBUILD2MAT2MAT3
  displayName: Build try Mat2 sub Mat3
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_RUN_SCRIPT) PipelineRunEntry --args "run=build;idsToRun=NukeBuildHelpersBuild2Mat2Mat3"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - task: PublishPipelineArtifact@1
    displayName: Upload Artifacts
    inputs:
      artifact: build___nuke_build_helpers___NukeBuildHelpersBuild2Mat2Mat3
      targetPath: ./.nuke/temp/artifacts-upload
      continueOnError: true
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  condition: and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT3_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSBUILD2MAT2MAT4
  displayName: Build try Mat2 sub Mat4
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_RUN_SCRIPT) PipelineRunEntry --args "run=build;idsToRun=NukeBuildHelpersBuild2Mat2Mat4"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - task: PublishPipelineArtifact@1
    displayName: Upload Artifacts
    inputs:
      artifact: build___nuke_build_helpers___NukeBuildHelpersBuild2Mat2Mat4
      targetPath: ./.nuke/temp/artifacts-upload
      continueOnError: true
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  condition: and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD2MAT2MAT4_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSBUILD3
  displayName: Build try 2
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_RUN_SCRIPT) PipelineRunEntry --args "run=build;idsToRun=NukeBuildHelpersBuild3"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - task: PublishPipelineArtifact@1
    displayName: Upload Artifacts
    inputs:
      artifact: build___nuke_build_helpers2___NukeBuildHelpersBuild3
      targetPath: ./.nuke/temp/artifacts-upload
      continueOnError: true
  dependsOn:
  - PRE_SETUP
  condition: and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CONDITION, 'true'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSBUILD3_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSTEST3
  displayName: Test try 3
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: DownloadPipelineArtifact@2
    displayName: Download artifacts
    inputs:
      path: ./.nuke/temp/artifacts-download
      patterns: '**'
      continueOnError: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_RUN_SCRIPT) PipelineRunEntry --args "run=test;idsToRun=NukeBuildHelpersTest3"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  - NUKEBUILDHELPERSBUILD1
  - NUKEBUILDHELPERSBUILD2MAT1MAT3
  - NUKEBUILDHELPERSBUILD2MAT1MAT4
  - NUKEBUILDHELPERSBUILD2MAT2MAT3
  - NUKEBUILDHELPERSBUILD2MAT2MAT4
  condition: and(and(and(and(and(and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT3.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT4.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT3.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT4.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST3_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSTEST4
  displayName: Test try 4
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: DownloadPipelineArtifact@2
    displayName: Download artifacts
    inputs:
      path: ./.nuke/temp/artifacts-download
      patterns: '**'
      continueOnError: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_RUN_SCRIPT) PipelineRunEntry --args "run=test;idsToRun=NukeBuildHelpersTest4"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSBUILD3
  condition: and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSBUILD3.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST4_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSTEST5
  displayName: Test try 5
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: DownloadPipelineArtifact@2
    displayName: Download artifacts
    inputs:
      path: ./.nuke/temp/artifacts-download
      patterns: '**'
      continueOnError: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_RUN_SCRIPT) PipelineRunEntry --args "run=test;idsToRun=NukeBuildHelpersTest5"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  - NUKEBUILDHELPERSBUILD1
  - NUKEBUILDHELPERSBUILD2MAT1MAT3
  - NUKEBUILDHELPERSBUILD2MAT1MAT4
  - NUKEBUILDHELPERSBUILD2MAT2MAT3
  - NUKEBUILDHELPERSBUILD2MAT2MAT4
  - NUKEBUILDHELPERSBUILD3
  condition: and(and(and(and(and(and(and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT3.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT4.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT3.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT4.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD3.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSTEST5_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: NUKEBUILDHELPERSPUBLISH
  displayName: Publish - nuke_build_helpers (NukeBuildHelpersPublish)
  pool:
    name: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_POOL_NAME)
    vmImage: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_POOL_VM_IMAGE)
  steps:
  - checkout: self
    fetchDepth: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_FETCH_DEPTH)
    fetchTags: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_FETCH_TAGS)
    submodules: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_SUBMODULES)
    persistCredentials: true
  - task: DownloadPipelineArtifact@2
    displayName: Download Artifacts
    inputs:
      itemPattern: build___nuke_build_helpers___*/**
      path: ./.nuke/temp/artifacts-download
      continueOnError: true
  - task: Cache@2
    displayName: Cache Run
    inputs:
      path: ./.nuke/temp/cache
      key: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_KEY)
      restoreKeys: |-
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_RESTORE_KEY)
        $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_MAIN_RESTORE_KEY)
  - script: $(NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_RUN_SCRIPT) PipelineRunEntry --args "run=publish;idsToRun=NukeBuildHelpersPublish"
    name: NUKE_RUN
    displayName: Run Nuke PipelineRunEntry
  - task: PublishPipelineArtifact@1
    displayName: Upload Artifacts
    inputs:
      artifact: publish___nuke_build_helpers___NukeBuildHelpersPublish
      targetPath: ./.nuke/temp/artifacts-upload
      continueOnError: true
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  - NUKEBUILDHELPERSBUILD1
  - NUKEBUILDHELPERSBUILD2MAT1MAT3
  - NUKEBUILDHELPERSBUILD2MAT1MAT4
  - NUKEBUILDHELPERSBUILD2MAT2MAT3
  - NUKEBUILDHELPERSBUILD2MAT2MAT4
  - NUKEBUILDHELPERSTEST3
  - NUKEBUILDHELPERSTEST5
  condition: and(and(and(and(and(and(and(and(and(and(not(or(failed(), canceled())), eq(variables.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CONDITION, 'true')), eq(dependencies.NUKEBUILDHELPERSTEST1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD1.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT3.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT4.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT3.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT4.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST3.result, 'Succeeded')), eq(dependencies.NUKEBUILDHELPERSTEST5.result, 'Succeeded'))
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CONDITION: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CONDITION'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_POOL_NAME: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_POOL_NAME'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_POOL_VM_IMAGE: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_POOL_VM_IMAGE'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_RUN_SCRIPT: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_RUN_SCRIPT'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_MAIN_RESTORE_KEY: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CACHE_MAIN_RESTORE_KEY'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_FETCH_DEPTH: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_FETCH_DEPTH'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_FETCH_TAGS: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_FETCH_TAGS'] ]
    NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_SUBMODULES: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP_NUKEBUILDHELPERSPUBLISH_CHECKOUT_SUBMODULES'] ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
- job: POST_SETUP
  displayName: Post Setup
  pool:
    name: Azure Pipelines
    vmImage: ubuntu-22.04
  steps:
  - checkout: self
    fetchDepth: 0
    fetchTags: true
    submodules: recursive
    persistCredentials: true
  - task: DownloadPipelineArtifact@2
    displayName: Download artifacts
    inputs:
      path: ./.nuke/temp/artifacts-download
      continueOnError: true
      itemPattern: publish___*/**
  - script: chmod +x ./build.sh && ./build.sh PipelinePostSetup
    displayName: Run Nuke PipelinePostSetup
  dependsOn:
  - PRE_SETUP
  - NUKEBUILDHELPERSTEST1
  - NUKEBUILDHELPERSTEST2CUSTOMID
  - NUKEBUILDHELPERSBUILD1
  - NUKEBUILDHELPERSBUILD2MAT1MAT3
  - NUKEBUILDHELPERSBUILD2MAT1MAT4
  - NUKEBUILDHELPERSBUILD2MAT2MAT3
  - NUKEBUILDHELPERSBUILD2MAT2MAT4
  - NUKEBUILDHELPERSBUILD3
  - NUKEBUILDHELPERSTEST3
  - NUKEBUILDHELPERSTEST4
  - NUKEBUILDHELPERSTEST5
  - NUKEBUILDHELPERSPUBLISH
  condition: always()
  timeoutInMinutes: 30
  variables:
    NUKE_PRE_SETUP: $[ dependencies.PRE_SETUP.outputs['NUKE_RUN.NUKE_PRE_SETUP'] ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSTEST1: $[ dependencies.NUKEBUILDHELPERSTEST1.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSTEST2CUSTOMID: $[ dependencies.NUKEBUILDHELPERSTEST2CUSTOMID.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSTEST3: $[ dependencies.NUKEBUILDHELPERSTEST3.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSTEST4: $[ dependencies.NUKEBUILDHELPERSTEST4.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSTEST5: $[ dependencies.NUKEBUILDHELPERSTEST5.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSBUILD1: $[ dependencies.NUKEBUILDHELPERSBUILD1.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSBUILD2MAT1MAT3: $[ dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT3.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSBUILD2MAT1MAT4: $[ dependencies.NUKEBUILDHELPERSBUILD2MAT1MAT4.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSBUILD2MAT2MAT3: $[ dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT3.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSBUILD2MAT2MAT4: $[ dependencies.NUKEBUILDHELPERSBUILD2MAT2MAT4.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSBUILD3: $[ dependencies.NUKEBUILDHELPERSBUILD3.result ]
    NUKE_RUN_RESULT_AZURE_NUKEBUILDHELPERSPUBLISH: $[ dependencies.NUKEBUILDHELPERSPUBLISH.result ]
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    NUKE_NUGET_AUTH_TOKEN: $(NUGET_AUTH_TOKEN)
    NUKE_GITHUB_TOKEN: $(GITHUB_TOKEN)
