name: Nuke CICD Pipeline
on:
  push:
    branches:
    - prerelease
    - main
    tags:
    - bump-*
  pull_request:
    branches:
    - '**'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  pre_setup:
    name: Pre Setup
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - id: NUKE_RUN
      name: Run Nuke PipelinePreSetup
      run: chmod +x ./build.sh && ./build.sh PipelinePreSetup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      NUKE_PRE_SETUP: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP }}
      NUKE_PRE_SETUP_OUTPUT_TEST_MATRIX: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_OUTPUT_TEST_MATRIX }}
      NUKE_PRE_SETUP_OUTPUT_BUILD_MATRIX: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_OUTPUT_BUILD_MATRIX }}
      NUKE_PRE_SETUP_OUTPUT_PUBLISH_MATRIX: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_OUTPUT_PUBLISH_MATRIX }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest1_CONDITION: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CONDITION }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest1_RUNS_ON: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_RUNS_ON }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest1_RUN_SCRIPT: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_RUN_SCRIPT }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_MAIN_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_MAIN_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest2_CONDITION: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CONDITION }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest2_RUNS_ON: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_RUNS_ON }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest2_RUN_SCRIPT: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_RUN_SCRIPT }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_MAIN_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_MAIN_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CONDITION: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CONDITION }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild1_RUNS_ON: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_RUNS_ON }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild1_RUN_SCRIPT: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_RUN_SCRIPT }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_MAIN_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_MAIN_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CONDITION: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CONDITION }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild2_RUNS_ON: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_RUNS_ON }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild2_RUN_SCRIPT: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_RUN_SCRIPT }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_MAIN_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_MAIN_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersPublish_CONDITION: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CONDITION }}
      NUKE_PRE_SETUP_NugetBuildHelpersPublish_RUNS_ON: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_RUNS_ON }}
      NUKE_PRE_SETUP_NugetBuildHelpersPublish_RUN_SCRIPT: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_RUN_SCRIPT }}
      NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_RESTORE_KEY }}
      NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_MAIN_RESTORE_KEY: ${{ steps.NUKE_RUN.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_MAIN_RESTORE_KEY }}
  NugetBuildHelpersTest1:
    name: Test try 1
    runs-on: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_RUNS_ON }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache Test
      uses: actions/cache@v4
      with:
        path: ./.nuke/cache
        key: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_KEY }}
        restore-keys: |-
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_RESTORE_KEY }}
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CACHE_MAIN_RESTORE_KEY }}
    - id: test_github_1
      name: Custom github step test 1
      run: echo "Test github 1"
    - id: NUKE_RUN
      name: Run Nuke PipelineTest
      run: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_RUN_SCRIPT }} PipelineTest --args "NugetBuildHelpersTest1"
    - id: test_github_2
      name: Custom github step test 2
      run: echo "Test github 2"
    needs:
    - pre_setup
    if: success() && needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest1_CONDITION == 'true'
    env:
      NUKE_PRE_SETUP: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP }}
  NugetBuildHelpersTest2:
    name: Test try 2
    runs-on: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_RUNS_ON }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache Test
      uses: actions/cache@v4
      with:
        path: ./.nuke/cache
        key: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_KEY }}
        restore-keys: |-
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_RESTORE_KEY }}
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CACHE_MAIN_RESTORE_KEY }}
    - id: NUKE_RUN
      name: Run Nuke PipelineTest
      run: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_RUN_SCRIPT }} PipelineTest --args "NugetBuildHelpersTest2"
    needs:
    - pre_setup
    if: success() && needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersTest2_CONDITION == 'true'
    env:
      NUKE_PRE_SETUP: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP }}
  NugetBuildHelpersBuild1:
    name: Build main
    runs-on: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_RUNS_ON }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache Test
      uses: actions/cache@v4
      with:
        path: ./.nuke/cache
        key: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_KEY }}
        restore-keys: |-
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_RESTORE_KEY }}
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CACHE_MAIN_RESTORE_KEY }}
    - id: NUKE_RUN
      name: Run Nuke PipelineBuild
      run: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_RUN_SCRIPT }} PipelineBuild --args "NugetBuildHelpersBuild1"
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget_build_helpers - NugetBuildHelpersBuild1
        path: ./.nuke/output/*
        if-no-files-found: error
        retention-days: 1
    needs:
    - pre_setup
    - NugetBuildHelpersTest1
    - NugetBuildHelpersTest2
    if: success() && needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild1_CONDITION == 'true'
    env:
      NUKE_PRE_SETUP: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP }}
  NugetBuildHelpersBuild2:
    name: Build try
    runs-on: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_RUNS_ON }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache Test
      uses: actions/cache@v4
      with:
        path: ./.nuke/cache
        key: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_KEY }}
        restore-keys: |-
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_RESTORE_KEY }}
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CACHE_MAIN_RESTORE_KEY }}
    - id: NUKE_RUN
      name: Run Nuke PipelineBuild
      run: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_RUN_SCRIPT }} PipelineBuild --args "NugetBuildHelpersBuild2"
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget_build_helpers - NugetBuildHelpersBuild2
        path: ./.nuke/output/*
        if-no-files-found: error
        retention-days: 1
    needs:
    - pre_setup
    - NugetBuildHelpersTest1
    - NugetBuildHelpersTest2
    if: success() && needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersBuild2_CONDITION == 'true'
    env:
      NUKE_PRE_SETUP: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP }}
  NugetBuildHelpersPublish:
    name: Publish - nuget_build_helpers
    runs-on: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_RUNS_ON }}
    steps:
    - uses: actions/checkout@v4
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./.nuke/output
        pattern: nuget_build_helpers - *
        merge-multiple: true
    - name: Cache Test
      uses: actions/cache@v4
      with:
        path: ./.nuke/cache
        key: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_KEY }}
        restore-keys: |-
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_RESTORE_KEY }}
          ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CACHE_MAIN_RESTORE_KEY }}
    - id: NUKE_RUN
      name: Run Nuke PipelinePublish
      run: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_RUN_SCRIPT }} PipelinePublish --args "NugetBuildHelpersPublish"
    needs:
    - pre_setup
    - NugetBuildHelpersBuild1
    - NugetBuildHelpersBuild2
    if: success() && needs.pre_setup.outputs.NUKE_PRE_SETUP_NugetBuildHelpersPublish_CONDITION == 'true'
    env:
      NUKE_PRE_SETUP: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP }}
  post_setup:
    name: Post Setup
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./.nuke/output
    - name: Run Nuke PipelinePostSetup
      run: chmod +x ./build.sh && ./build.sh PipelinePostSetup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs:
    - pre_setup
    - NugetBuildHelpersTest1
    - NugetBuildHelpersTest2
    - NugetBuildHelpersBuild1
    - NugetBuildHelpersBuild2
    - NugetBuildHelpersPublish
    if: success() || failure() || always()
    env:
      NUKE_PRE_SETUP: ${{ needs.pre_setup.outputs.NUKE_PRE_SETUP }}
      NUKE_RUN_RESULT_AZURE_NugetBuildHelpersTest1: ${{ needs.NugetBuildHelpersTest1.result }}
      NUKE_RUN_RESULT_AZURE_NugetBuildHelpersTest2: ${{ needs.NugetBuildHelpersTest2.result }}
      NUKE_RUN_RESULT_AZURE_NugetBuildHelpersBuild1: ${{ needs.NugetBuildHelpersBuild1.result }}
      NUKE_RUN_RESULT_AZURE_NugetBuildHelpersBuild2: ${{ needs.NugetBuildHelpersBuild2.result }}
      NUKE_RUN_RESULT_AZURE_NugetBuildHelpersPublish: ${{ needs.NugetBuildHelpersPublish.result }}
env:
  NUKE_NUGET_AUTH_TOKEN: ${{ secrets.NUGET_AUTH_TOKEN }}
  NUKE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
